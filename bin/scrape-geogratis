#!/usr/bin/env perl
use strict;
use warnings;
use lib 'lib';
use Net::CKAN;
use XML::Simple;
use LWP::Simple qw/get/;

my $ckan = Net::CKAN->new(
    server => 'http://ca.ckan.net',
    api_key => '53c7b7cb-b771-45f0-86f3-e7613e760ddb',
);

my $page_url = 'http://geogratis.cgdi.gc.ca/geogratis/en/collection/metadata.do?id=67';

my $pkg = {};
my $page = get($page_url);
$page =~ m#"(http://\S+\.xml)"# or die "Could not find XML for $page_url";
my $rsrc = get_xml($1);

set_key(name => $rsrc->{id});
set_key(url => $page_url);
set_key(license_id => 9);
if ($page =~ m#<dt>Calendar Date:</dt>.+?<dd>([\d-]+)</dd>#s) {
  set_key(version => $1);
}
set_key(title => $rsrc->{General}{Title}, \&english_content);
set_key(notes => $rsrc->{General}{Abstract}, \&english_content);
# TODO: resources => []
if ($page =~ m#<dt>Originator:</dt>.+?<dd>([^\<]+)<#s) {
  set_key(author => $1);
}
if ($page =~ m#<a href="mailto:([^"]+)"#s) {
  set_key(author_email => $1);
  set_key(maintainer_email => $1);
}
if ($page =~ m#<dt>Contact Organization:</dt>.+?<dd>([^\<]+)<#s) {
  set_key(maintainer => $1);
}
$pkg->{extras}{License} = 'http://geogratis.ca/geogratis/en/licence.jsp';
$pkg->{extras}{Ministry} = 'Natural Resources Canada';
$pkg->{extras}{'Level of Government'} = 'Federal';
$pkg->{tags} = [
    map { $_->{content} }
      grep { $_->{'xml:lang'} eq 'en' }
        @{ $rsrc->{General}{KeywordList}{Keyword} }
];

use Data::Dumper;
warn Dumper $pkg;
exit;

my $blah = {
    state => 'active',
    tags => [
                'population',
                'canada'
              ],
};

sub set_key {
  my $pkg_key   = shift;
  my $data      = shift;
  my $transform = shift || sub { return shift };

  unless ($data) { warn "Undef value found for $pkg_key!"; return }
  warn "Setting $pkg_key";
  $data = $transform->($data);
  unless ($data) { warn "Undef value found after transform for $pkg_key!"; return }
  $pkg->{$pkg_key} = $data;
}


sub get_xml {
    my $url = shift;
    my $ua = LWP::UserAgent->new;
    my $resp = $ua->get($url);
    warn "Could not fetch $url: ", $resp->status_line, "\n"
        if $resp->code != 200;
    return XMLin($resp->content);
}

sub english_content {
    my $value = shift;
    for (@$value) {
        return $_->{content} if $_->{'xml:lang'} eq 'en';
    }
    return undef;
}
